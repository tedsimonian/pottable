---
description: Github Flow Workflow Rules. These rules should be applied when performing git operations.
---
# Gitflow Workflow Rules

## Main Branches

### main (or master)
- Contains current deployable code
- Only accepts merges from:
  - feature/* branches
- Must be have its version updated appropriately after every merge

### feature/*
- Branch from: main
- Merge back into: main
- Naming convention: feature/[issue-id]-descriptive-name
- Example: feature/PLU-123-user-authentication
- Must be up-to-date with main before creating PR
- A changeset must be present before merging
- Delete after merge

## Commit Messages

- Format: `type(scope): description`
- Types:
  - feat: New feature
  - fix: Bug fix
  - docs: Documentation changes
  - style: Formatting, missing semicolons, etc.
  - refactor: Code refactoring
  - test: Adding tests
  - chore: Maintenance tasks

## Version Control

### Semantic Versioning
- MAJOR version for incompatible API changes
- MINOR version for backwards-compatible functionality
- PATCH version for backwards-compatible bug fixes

## Pull Request Rules

1. All changes must go through Pull Requests
2. Required approvals: minimum 1
3. CI checks must pass
4. No direct commits to protected branches (main)
5. Branch must be up to date before merging
6. Delete branch after merge

## Branch Protection Rules

### main
- Require pull request reviews
- Require status checks to pass
- Require branches to be up to date
- Include administrators in restrictions
- No force pushes
- No deletions

## Release Process

On every PR merge, a workflow will run and it will do the following:
- Consume all changesets
- Update changelog.md with changeset information
- Bump version numbers
- Create a Github Release with an appropriate tag and changes in body